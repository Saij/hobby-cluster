- name: Set docker_os_family fact
  ansible.builtin.set_fact:
    docker_os_family: "{{ 'debian' if ansible_distribution == 'Debian' else 'ubuntu' }}"

- name: Install required packages
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present
    update_cache: yes

- name: Add Docker GPG key
  ansible.builtin.apt_key:
    url: "https://download.docker.com/linux/{{ docker_os_family }}/gpg"
    state: present

- name: Add Docker repository
  ansible.builtin.apt_repository:
    repo: "deb https://download.docker.com/linux/{{ docker_os_family }} {{ ansible_distribution_release }} stable"
    state: present
    filename: docker

- name: Install containerd
  ansible.builtin.apt:
    name: containerd.io
    state: present
    update_cache: yes

- name: Create containerd config directory
  ansible.builtin.file:
    path: /etc/containerd
    state: directory
    mode: "0755"

- name: Check if containerd config already exists
  ansible.builtin.stat:
    path: /etc/containerd/config.toml
  register: containerd_config_stat

- name: Configure containerd
  when: not containerd_config_stat.stat.exists
  block:
    - name: Generate containerd config
      ansible.builtin.command: containerd config default
      register: containerd_default_config

    - name: Write containerd config
      ansible.builtin.copy:
        dest: /etc/containerd/config.toml
        content: "{{ containerd_default_config.stdout }}"
        mode: "0644"
      notify: (Re-)Start containerd

- name: Enable Systemd cgroup driver
  ansible.builtin.replace:
    path: /etc/containerd/config.toml
    regexp: "SystemdCgroup = false"
    replace: "SystemdCgroup = true"
  notify: (Re-)Start containerd